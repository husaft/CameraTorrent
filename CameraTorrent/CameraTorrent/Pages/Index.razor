@page "/"
@using Humanizer
@using System.IO

<PageTitle>Send</PageTitle>

<h1>File sending</h1>

Select one or more files and they will be packaged up for you.

<br />
<br />

<InputFile OnChange="@LoadFiles" multiple />

<br />
<br />

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Modified</th>
			<th>Size</th>
			<th>Type</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var file in _loadedFiles)
		{
			<tr>
				<td>@file.Name</td>
				<td>@file.LastModified.ToString("g")</td>
				<td>@file.Size.Bytes().Humanize()</td>
				<td>@file.ContentType</td>
			</tr>
		}
	</tbody>
</table>

<button class="btn btn-primary" @onclick="ProcessFiles">Start!</button>

<br />
<br />

<p>@_status</p>

@code {
	private const int MaxFileCount = 13;
	private const int MaxFileSize = 45 * 1024 * 1024;
	private readonly List<IBrowserFile> _loadedFiles = new();

	private void LoadFiles(InputFileChangeEventArgs e)
	{
		_loadedFiles.Clear();
		foreach (var file in e.GetMultipleFiles(MaxFileCount))
		{
			_loadedFiles.Add(file);
		}
	}

	private string _status = "";

	private async Task ProcessFiles()
	{
		await using var mem = new MemoryStream();
		var options = new WriterOptions(CompressionType.LZip);
		using (var writer = WriterFactory.Open(mem, ArchiveType.Tar, options))
		{
			foreach (var file in _loadedFiles)
			{
				var name = file.Name;
				var modTime = file.LastModified.DateTime;

				await using var stream = file.OpenReadStream(MaxFileSize);
				await using var tmp = new MemoryStream();
				await stream.CopyToAsync(tmp);
				tmp.Position = 0L;
				writer.Write(name, tmp, modTime);
			}
		}

		var bytes = mem.ToArray();
		_status = $"Package size = {bytes.Length.Bytes().Humanize()}";

		// TODO
	}
}
