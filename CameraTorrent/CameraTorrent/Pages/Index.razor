@page "/"
@using Humanizer
@using CameraTorrent.Lib
@using CameraTorrent.Lib.Util
@using CameraTorrent.Util

<PageTitle>Camera Torrent</PageTitle>

<h1>File sending</h1>

Select one or more files and they will be packaged up for you.

<br />
<br />

<InputFile OnChange="@LoadFiles" multiple />

<br />
<br />

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Modified</th>
			<th>Size</th>
			<th>Type</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var file in _loadedFiles)
		{
			<tr>
				<td>@file.Name</td>
				<td>@file.LastModified.ToString("g")</td>
				<td>@file.Size.Bytes().Humanize()</td>
				<td>@file.ContentType</td>
			</tr>
		}
	</tbody>
</table>

<button class="btn btn-primary" @onclick="ProcessFiles">Start!</button>

<br />
<br />

<p>@_status</p>

<ol>
	@foreach (var image in _loadedCodes)
	{
		<li>
			<img src="@image" alt="code" style="width:75%;" />
		</li>
	}
</ol>

@code {
	private const int MaxFileCount = 13;
	private readonly List<IBrowserFile> _loadedFiles = new();

	private void LoadFiles(InputFileChangeEventArgs e)
	{
		_loadedFiles.Clear();
		foreach (var file in e.GetMultipleFiles(MaxFileCount))
		{
			_loadedFiles.Add(file);
		}
		_status = string.Empty;
		_loadedCodes.Clear();
	}

	private string _status = "";

	private readonly Torrent _torrent = new();
	private readonly List<string> _loadedCodes = new();

	private async Task ProcessFiles()
	{
		var args = _loadedFiles.Select(l => l.Wrap()).ToArray();
		await foreach (var qr in _torrent.Pack(args))
		{
			_loadedCodes.Add(qr.ToBase64Str());
		}
		_status = $"{_loadedCodes.Count} codes generated.";
	}
}
